<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gtnals.book_information.mapper.BookMapper">
    <select id="getBookInfo" resultType="com.gtnals.book_information.data.BookVO">
        select a.*, b.ai_name as author
        from book_info a left outer join author_info b on a.bi_ai_seq=b.ai_seq
        <if test="key_opt==0">
            where bi_name like #{keyword} or b.ai_name like #{keyword}
        </if>
        <if test="key_opt==1">
            where bi_name like #{keyword}
        </if>
        <if test="key_opt==2">
            where b.ai_name like #{keyword}
        </if>
        order by 
        <if test="order==0">
            bi_seq desc
        </if>
        <if test="order==1">
            bi_cnt desc
        </if>
        <if test="order==2">
            bi_like desc
        </if>
        <if test="order==3">
            bi_name
        </if>
        limit 10 offset #{offset}
    </select>
    <select id="getBookCount" resultType="java.lang.Integer">
        select count(*)
        from book_info a left outer join author_info b on a.bi_ai_seq=b.ai_seq
        <if test="key_opt==0">
            where bi_name like #{keyword} or b.ai_name like #{keyword}
        </if>
        <if test="key_opt==1">
            where bi_name like #{keyword}
        </if>
        <if test="key_opt==2">
            where b.ai_name like #{keyword}
        </if>
    </select>
    <select id="getBookInfoByDetail" resultType="com.gtnals.book_information.data.BookVO">
        select a.*, b.ai_name as author
        from book_info a left outer join author_info b on a.bi_ai_seq=b.ai_seq
        where bi_name like #{name}
        and b.ai_name like #{author}
        and bi_publisher like #{publisher}
        <if test="category!=-1">
            and bi_category = #{category}
        </if>
        order by
        <if test="order==0">
            bi_seq desc
        </if>
        <if test="order==1">
            bi_cnt desc
        </if>
        <if test="order==2">
            bi_like desc
        </if>
        <if test="order==3">
            bi_name
        </if>
        limit 10 offset #{offset}
    </select>
    <select id="getBookCountByDetail" resultType="java.lang.Integer">
        select count(*)
        from book_info a left outer join author_info b on a.bi_ai_seq=b.ai_seq
        where bi_name like #{name}
        and b.ai_name like #{author}
        and bi_publisher like #{publisher}
        <if test="category!=-1">
            and bi_category = #{category}
        </if>
    </select>
    <insert id="addBook">
        insert into book_info(bi_name, bi_number, bi_status, bi_ai_seq, bi_publisher, bi_category, bi_publication_date, bi_image, bi_page)
        values(#{bi_name}, #{bi_number}, #{bi_status}, #{bi_ai_seq}, #{bi_publisher}, #{bi_category}, #{bi_publication_date}, #{bi_image}, #{bi_page})
    </insert>
    <delete id="deleteBook">
        delete from book_info where bi_seq=#{seq}
    </delete>
    <select id="getBookInfoBySeq" resultType="com.gtnals.book_information.data.BookVO">
        select a.*, b.ai_name as author, b.ai_number as author_number
        from book_info a left outer join author_info b on a.bi_ai_seq=b.ai_seq
        where a.bi_seq=#{seq}
    </select>
    <update id="updateBook">
        update book_info
        set bi_name=#{bi_name}, bi_number=#{bi_number}, bi_status=#{bi_status}, bi_ai_seq=#{bi_ai_seq}, bi_publisher=#{bi_publisher},
        bi_category=#{bi_category}, bi_publication_date=#{bi_publication_date}, bi_image=#{bi_image}, bi_page=#{bi_page}, bi_mod_dt=NOW()
        where bi_seq=#{bi_seq}
    </update>
    <select id="selectLatestDataSeq" resultType="java.lang.Integer">
        select bi_seq from book_info
        order by bi_seq desc limit 1
    </select>
    <insert id="insertBookHistory">
        INSERT INTO book_history(bh_type, bh_content, bh_bi_seq)
        VALUES(#{bh_type}, #{bh_content}, #{bh_bi_seq})
    </insert>
</mapper>